# Bazel build
# C/C++ documentation: https://docs.bazel.build/versions/master/be/c-cpp.html

load("@com_github_ray_project_ray//bazel:cython_library.bzl", "pyx_library")

proto_library(
    name = "streaming_proto",
    srcs = ["protobuf/streaming.proto"],
    visibility = ["//visibility:public"],
)

cc_proto_library(
    name = "streaming_cc_proto",
    deps = [":streaming_proto"],
)

proto_library(
    name = "streaming_queue_proto",
    srcs = ["protobuf/streaming_queue.proto"],
)

cc_proto_library(
    name = "streaming_queue_cc_proto",
    deps = ["streaming_queue_proto"],
)

cc_library(
    name = "streaming_util",
    srcs = glob([
        "util/*.cc",
    ]),
    hdrs = glob([
        "util/*.h",
    ]),
    includes = [
        ".",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//:ray_util",
        "@com_google_googletest//:gtest",
    ],
)

cc_library(
    name = "streaming_config",
    srcs = glob([
        "config/*.cc",
    ]),
    hdrs = glob([
        "config/*.h",
    ]),
    deps = [
        ":streaming_cc_proto",
        ":streaming_util",
        "//:ray_common",
        "@boost//:any",
    ],
)

cc_library(
    name = "streaming_message",
    srcs = glob([
        "message/*.cc",
    ]),
    hdrs = glob([
        "message/*.h",
    ]),
    deps = [
        ":streaming_config",
        ":streaming_util",
        "//:ray_common",
    ],
)

cc_library(
    name = "streaming_queue",
    srcs = glob([
        "queue/*.cc",
    ]),
    hdrs = glob([
        "queue/*.h",
    ]),
    deps = [
        ":streaming_config",
        ":streaming_message",
        ":streaming_queue_cc_proto",
        ":streaming_util",
        "//:core_worker_lib",
        "//:ray_common",
        "//:ray_util",
        "//:raylet_lib",
        "@boost//:asio",
        "@boost//:thread",
    ],
)

cc_library(
    name = "streaming_lib",
    srcs = glob([
        "*.cc",
    ]),
    hdrs = glob([
        "*.h",
        "queue/*.h",
    ]),
    includes = ["."],
    visibility = ["//visibility:public"],
    deps = [
        ":streaming_config",
        ":streaming_message",
        ":streaming_queue",
        ":streaming_util",
        "//:ray_common",
        "//:ray_util",
        "//:raylet_lib",
        "@boost//:circular_buffer",
    ],
)

cc_binary(
    name = "streaming_test_worker",
    srcs = [
        "test/streaming_mock_actor.cc",
    ],
    copts = ["-Itest/"],
    includes = [
        "streaming/src/test",
    ],
    deps = [
        ":streaming_lib",
    ],
)

cc_binary(
    name = "streaming_message_ring_buffer_tests",
    srcs = [
        "test/streaming_message_ring_buffer_tests.cc",
    ],
    includes = [
        "streaming/src/test",
    ],
    deps = [
        ":streaming_lib",
    ],
)

cc_binary(
    name = "streaming_message_serialization_tests",
    srcs = [
        "test/streaming_message_serialization_tests.cc",
    ],
    deps = [
        ":streaming_lib",
    ],
)

cc_binary(
    name = "streaming_mock_transfer",
    srcs = [
        "test/streaming_mock_transfer.cc",
    ],
    deps = [
        ":streaming_lib",
    ],
)

cc_binary(
    name = "streaming_writer_tests_with_streamingqueue",
    srcs = [
        "test/streaming_queue_tests_base.h",
        "test/streaming_writer_tests_with_streamingqueue.cc",
    ],
    copts = ["-Itest/"],
    deps = [
        ":streaming_lib",
    ],
)

cc_binary(
    name = "streaming_utility_tests",
    srcs = [
        "test/streaming_utility_tests.cc",
    ],
    deps = [
        ":streaming_lib",
    ],
)

genrule(
    name = "run_streaming_common_tests",
    srcs = [
        ":streaming_message_ring_buffer_tests",
        ":streaming_message_serialization_tests",
        ":streaming_utility_tests",
        ":streaming_mock_transfer",
    ],
    outs = ["streaming_test_log.out"],
    cmd = """
      set -x &&
      date > $@
      $(location streaming_message_ring_buffer_tests) >> $@ &&
      $(location streaming_message_serialization_tests) >> $@ &&
      $(location streaming_utility_tests) >> $@ &&
      $(location streaming_mock_transfer) >> $@
    """,
)
